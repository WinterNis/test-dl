name: CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

  workflow_dispatch:

jobs:
  getchanges:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.get-changed.outputs.matrix }}
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - name: Get changed integrations
        id: get-changed
        run: |
          # See https://github.community/t/check-pushed-file-changes-with-git-diff-tree-in-github-actions/17220/10 
          if [ $GITHUB_BASE_REF ]; then
            # Pull Request
            git fetch origin $GITHUB_BASE_REF --depth=1
            # Only select the mofidied directories that isn't "common" but an actual integration
            export DIFF=$( git diff --name-only origin/$GITHUB_BASE_REF $GITHUB_SHA )
            echo "Diff between origin/$GITHUB_BASE_REF and $GITHUB_SHA"
          else
            # Push
            git fetch origin ${{ github.event.before }} --depth=1
            # Only select the mofidied directories that isn't "common" but an actual integration
            export DIFF=$( git diff --name-only ${{ github.event.before }} $GITHUB_SHA )
            echo "Diff between ${{ github.event.before }} and $GITHUB_SHA"
          fi
          DIFFJSON=$(echo $DIFF | grep env | xargs -n1 -I {} basename {} .yml | jq -ncR '[inputs]')
          # Export the integrations as json to the outputs
          echo $DIFFJSON
          echo "matrix=$(echo "$DIFFJSON")" >> $GITHUB_OUTPUT

  runstuff:
    name: Run for ${{ matrix.file }}
    runs-on: ubuntu-latest
    needs: getchanges
    environment: ${{ matrix.file }}
    strategy:
      fail-fast: false
      matrix:
        file: ${{ fromJson(needs.getchanges.outputs.matrix) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Run script
        run: |
          echo "Secret value is ${{ secrets.SECRETENV }}"
          echo ${{secrets.SECRETENV}} | grep env | sed 's/./& /g'
          echo "Var value is ${{ vars.VARENV }}"
